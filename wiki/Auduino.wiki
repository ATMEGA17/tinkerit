#summary Details of the Auduino synthesiser
#labels auduino,arduino

= Introduction =

The Auduino is a sound synthesiser based on the [http://arduino.cc Arduino platform]. The prototype uses the Arduino Diecimila, although any modern Arduino with an ATmega168 chip will work fine. It uses granular synthesis techniques to generate a distinctive filter-sweep sound that had much more character than boring square waves.

= Synthesis model =
Sound is generated by playing the same noise ('grain') repeatedly at very high speed. This merges into a tone that is an audible hybrid of the repetition rate and the original grain.

The grain consists of two triangular waves of adjustable frequency, and adjustable decay rate.
The repetition rate is set by another control.

= Construction of controls =

Auduino uses 5 controls. You can use anything that generates a 0-5V analogue signal, but the prototype uses five 4.7Kohm potentiometers. Connect one side of each potentiometer to GND. Connect the other side to the 5V pin on Arduino. Connect the middle (wiper) pins to Analog inputs 0 to 4 on the Arduino.

= Construction of the audio output =

The easy bit. The audio comes out of Digital pin 3. The prototype uses a 1/4" jack socket, with the tip connected to pin 3 and the shield connected to GND. Plug the other end into an audio amplifier, and you're good to go.

The Arduino can drive a small piezo, speaker or headphones directly.

= Auduino controller hacks =
The Auduino can take any analogue signal and make it audible. Add a Light Dependent Resistor, you have an instant theremin. Add a linear softpot, instant keyboard. The [http://www.arduino.cc/playground/ Arduino Playground] is a great place to get new ideas.

= Auduino software hacks =
Have a look at the loop() function. The controllers are mapped to the synthesiser parameters there. You can really customise the controllers there - adding different musical scales, vibrato, envelopes - whatever takes your fancy.

= Auduino hardcore hacking =
If you're really into algorithmic synthesis, have a poke around in the interrupt routine at the bottom of the source code. You'll have to be careful to keep the routine fast, but there is plenty of spare CPU to implement other synthesis techniques.